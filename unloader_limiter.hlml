# Makes sure outputs from an inventory do not empty it completely.

using mlog::config;

link nucleus1 as inventory;
link unloader1;
link unloader2;
link unloader3;
link unloader4;
link unloader5;
link unloader6;
link unloader7;
link unloader8;
link unloader9;
link unloader10;
link unloader11;
link unloader12;
link unloader13;
link unloader14;
link unloader15;
link unloader16;
const min_amount = 3e3;

entrypoint {
  limit_output(inventory, unloader1, min_amount);
  limit_output(inventory, unloader2, min_amount);
  limit_output(inventory, unloader3, min_amount);
  limit_output(inventory, unloader4, min_amount);
  limit_output(inventory, unloader5, min_amount);
  limit_output(inventory, unloader6, min_amount);
  limit_output(inventory, unloader7, min_amount);
  limit_output(inventory, unloader8, min_amount);
  limit_output(inventory, unloader9, min_amount);
  limit_output(inventory, unloader10, min_amount);
  limit_output(inventory, unloader11, min_amount);
  limit_output(inventory, unloader12, min_amount);
  limit_output(inventory, unloader13, min_amount);
  limit_output(inventory, unloader14, min_amount);
  limit_output(inventory, unloader15, min_amount);
  limit_output(inventory, unloader16, min_amount);
}

# Enables an unloader if amount of an item in an inventory is greater than or
# equal to a lower limit. Otherwise, disables the unloader.
proc limit_output(inventory, unloader, min_amount) {
  var item = unloader.config;
  mlog::control_enabled(unloader, inventory.item >= min_amount);
}
